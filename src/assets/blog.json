[{"title":"Native React Apps Without React Native","authorName":"Max Lynch","authorEmail":"max@ionic.io","authorUrl":"https://twitter.com/maxlynch","slug":"native-react-apps-without-react-native","date":"2020-07-14T08:00:00.000Z","contents":"---\ntitle: Native React Apps Without React Native\ndate: 2020-07-14 08:00:00\nauthor: Max Lynch <max@ionic.io>\nauthorUrl: https://twitter.com/maxlynch\n---\n\n![Native React Apps Without React Native](/assets/img/blog/native-wout-react-native.png)\n\nIn the React world, the primary way to build native iOS and Android apps has been React Native. Created by Facebook in 2015, React Native enables developers to use their React skills to build iOS and Android apps using platform native UI elements. React Native is popular and widely used, and it’s a great solution for many teams.\n\nHowever, React Native comes with a number of tradeoffs. First, it requires developers to build in a React Native specific way, using views/JSX for each platform, and using libraries that support react-native (as opposed to most React libraries that support react-dom). But perhaps most importantly, React Native is not a web environment, so it’s not possible for teams to take their web-based React apps and libraries to deploy native apps.\n\nThe net effect is that it’s not possible to take, say, a Material-UI React web app, and deploy it natively to the Apple App Store or Google Play Store with React Native.\n\nTo do that, we need to take a look at [Capacitor](https://capacitorjs.com/) -- a native runtime for cross-platform web apps, including any and all React web apps.\n\n<!--more-->\n\n## Capacitor: Native Runtime for Web Apps\n\n[Capacitor](https://capacitorjs.com/) is sort of an “electron for mobile” that provides a native runtime for any modern web app, so it can run natively on iOS, Android, and the web using the same code. Capacitor provides full native API access through a [powerful plugin system](https://capacitorjs.com/docs/plugins), so apps can access the same level of functionality as any other pure native (or React Native) app.\n\nCapacitor is focused on enabling modern web apps to run on multiple platforms, and embraces browser-built apps. Capacitor is not a native UI abstraction like React Native, though native UI can certainly be used alongside a Capacitor app.\n\nCapacitor apps for iOS and Android [are native apps](https://medium.com/@maxlynch/cordova-ionic-apps-are-native-apps-64f9e1a995d9), they just happen to do a large amount of their work in a primary WebView.\n\nAs a side effect of being web-focused, Capacitor provides a standard web development experience where apps can be built largely in the browser, bringing the experience and tooling web developers have come to love.\n\n## Build Native Apps with Material-UI, Chakra, Ant, Prime, and more\n\nBecause Capacitor provides a native runtime environment for web apps, that means it can be used to turn any React web app into a native app. So apps using [Material-UI](https://material-ui.com/) or [Chakra](https://chakra-ui.com/) or [Prime](https://www.primefaces.org/primereact/) or [Ant](https://ant.design/) or [Ionic Framework](https://ionicframework.com/), or any other React UI library, can be turned into native apps using Capacitor (see our [examples repo](https://github.com/capacitor-community/examples) for real code in a variety of libraries).\n\nThis simply isn’t possible with React Native. Most popular React UI libraries target the web and react-dom, and most web libraries use web technologies like CSS that aren’t supported in React Native (at least not in their native format)\n\n## Bonus: Deploy Progressive Web Apps and Native Apps\n\nOne additional bonus feature of Capacitor is that it works on the web for Progressive Web Apps. That means an app using Capacitor can access many of the same APIs on native mobile but on the web instead. For example, the [Camera](https://capacitorjs.com/docs/apis/camera) and [Share](https://capacitorjs.com/docs/apis/share) APIs work across iOS, Android, and the web with the same code.\n\nWith this capability, teams often can build and ship on three platforms on day one, or even embrace [Progressive Web App First Development](https://ionicframework.com/blog/forget-mobile-first-progressive-web-app-first-is-the-future/), by using Capacitor.\n\n## Transform your React Web App into Native with Capacitor\n\nAdding native functionality and deploying to iOS, Android, and PWA with your existing React web app is easy. Just install Capacitor, drop it into to your project, and add a platform:\n\n```shell\nnpm install @capacitor/cli @capacitor/core\nnpx cap init\nnpx cap add ios\n```\n\nThen, to start using in a web app, import from `@capacitor/core`:\n\n```typescript\nimport { Plugins } from '@capacitor/core';\n\nconst { Share } = Plugins;\nawait Share.share({\n  title: 'My awesome thing',\n  text: 'Check out this really awesome thing',\n  url: 'https://capacitorjs.com/'\n});\n```\n\nThen run your web app:\n\n```shell\nnpm start\n```\n\nCapacitor apps can be built primarily in the browser, but to deploy and test on iOS or Android (simulator or device), open the IDE of choice and run directly in the IDE:\n\n```shell\nnpx cap open ios\n```\n\nFor the full getting started instructions, check out the [Capacitor documentation](https://capacitorjs.com/docs/getting-started).\n\n## Conclusion\n\nReact Native is no longer the only option for React devs to build iOS and Android apps. Capacitor provides a web-focused solution for teams building React web apps to enable them to ship to the app stores and the web with the same code base.\n\nAnd, for teams that are building a new app and interested in exploring a mobile-focused UI library for their Capacitor apps, [Ionic React](https://ionicframework.com/) is a great and popular option.\n\nBeyond React, Capacitor can be used with any modern web app technology, so is a good fit for teams with a diversity of frontend technologies in use, which is another challenge with React Native.\n\nWe're excited about Capacitor in the React ecosystem, and many teams are as well. Today, Capacitor is powering React apps with hundreds of millions of users, and for major brands and [enterprise customers](https://ionicframework.com/customers) like Burger King and Popeye's. Capacitor adoption has been [growing quickly](https://twitter.com/maxlynch/status/1280531102650769408) and given that given that web development with React represents the largest area of React development ([> 17x React Native](https://npmcharts.com/compare/react-native,react-dom?interval=7)), we're thrilled about the potential to help more web devs build cross-platform apps.\n\nCheck out Capacitor today and stay tuned for some exciting updates with the project coming soon: [capacitorjs.com](https://capacitorjs.com/)","preview":"<p><img src=\"/assets/img/blog/native-wout-react-native.png\" alt=\"Native React Apps Without React Native\"></p>\n<p>In the React world, the primary way to build native iOS and Android apps has been React Native. Created by Facebook in 2015, React Native enables developers to use their React skills to build iOS and Android apps using platform native UI elements. React Native is popular and widely used, and it’s a great solution for many teams.</p>\n<p>However, React Native comes with a number of tradeoffs. First, it requires developers to build in a React Native specific way, using views/JSX for each platform, and using libraries that support react-native (as opposed to most React libraries that support react-dom). But perhaps most importantly, React Native is not a web environment, so it’s not possible for teams to take their web-based React apps and libraries to deploy native apps.</p>\n<p>The net effect is that it’s not possible to take, say, a Material-UI React web app, and deploy it natively to the Apple App Store or Google Play Store with React Native.</p>\n<p>To do that, we need to take a look at <a href=\"https://capacitorjs.com/\">Capacitor</a> -- a native runtime for cross-platform web apps, including any and all React web apps.</p>\n","html":"<p><img src=\"/assets/img/blog/native-wout-react-native.png\" alt=\"Native React Apps Without React Native\"></p>\n<p>In the React world, the primary way to build native iOS and Android apps has been React Native. Created by Facebook in 2015, React Native enables developers to use their React skills to build iOS and Android apps using platform native UI elements. React Native is popular and widely used, and it’s a great solution for many teams.</p>\n<p>However, React Native comes with a number of tradeoffs. First, it requires developers to build in a React Native specific way, using views/JSX for each platform, and using libraries that support react-native (as opposed to most React libraries that support react-dom). But perhaps most importantly, React Native is not a web environment, so it’s not possible for teams to take their web-based React apps and libraries to deploy native apps.</p>\n<p>The net effect is that it’s not possible to take, say, a Material-UI React web app, and deploy it natively to the Apple App Store or Google Play Store with React Native.</p>\n<p>To do that, we need to take a look at <a href=\"https://capacitorjs.com/\">Capacitor</a> -- a native runtime for cross-platform web apps, including any and all React web apps.</p>\n<!--more-->\n\n<h2 id=\"capacitor-native-runtime-for-web-apps\">Capacitor: Native Runtime for Web Apps</h2>\n<p><a href=\"https://capacitorjs.com/\">Capacitor</a> is sort of an “electron for mobile” that provides a native runtime for any modern web app, so it can run natively on iOS, Android, and the web using the same code. Capacitor provides full native API access through a <a href=\"https://capacitorjs.com/docs/plugins\">powerful plugin system</a>, so apps can access the same level of functionality as any other pure native (or React Native) app.</p>\n<p>Capacitor is focused on enabling modern web apps to run on multiple platforms, and embraces browser-built apps. Capacitor is not a native UI abstraction like React Native, though native UI can certainly be used alongside a Capacitor app.</p>\n<p>Capacitor apps for iOS and Android <a href=\"https://medium.com/@maxlynch/cordova-ionic-apps-are-native-apps-64f9e1a995d9\">are native apps</a>, they just happen to do a large amount of their work in a primary WebView.</p>\n<p>As a side effect of being web-focused, Capacitor provides a standard web development experience where apps can be built largely in the browser, bringing the experience and tooling web developers have come to love.</p>\n<h2 id=\"build-native-apps-with-material-ui-chakra-ant-prime-and-more\">Build Native Apps with Material-UI, Chakra, Ant, Prime, and more</h2>\n<p>Because Capacitor provides a native runtime environment for web apps, that means it can be used to turn any React web app into a native app. So apps using <a href=\"https://material-ui.com/\">Material-UI</a> or <a href=\"https://chakra-ui.com/\">Chakra</a> or <a href=\"https://www.primefaces.org/primereact/\">Prime</a> or <a href=\"https://ant.design/\">Ant</a> or <a href=\"https://ionicframework.com/\">Ionic Framework</a>, or any other React UI library, can be turned into native apps using Capacitor (see our <a href=\"https://github.com/capacitor-community/examples\">examples repo</a> for real code in a variety of libraries).</p>\n<p>This simply isn’t possible with React Native. Most popular React UI libraries target the web and react-dom, and most web libraries use web technologies like CSS that aren’t supported in React Native (at least not in their native format)</p>\n<h2 id=\"bonus-deploy-progressive-web-apps-and-native-apps\">Bonus: Deploy Progressive Web Apps and Native Apps</h2>\n<p>One additional bonus feature of Capacitor is that it works on the web for Progressive Web Apps. That means an app using Capacitor can access many of the same APIs on native mobile but on the web instead. For example, the <a href=\"https://capacitorjs.com/docs/apis/camera\">Camera</a> and <a href=\"https://capacitorjs.com/docs/apis/share\">Share</a> APIs work across iOS, Android, and the web with the same code.</p>\n<p>With this capability, teams often can build and ship on three platforms on day one, or even embrace <a href=\"https://ionicframework.com/blog/forget-mobile-first-progressive-web-app-first-is-the-future/\">Progressive Web App First Development</a>, by using Capacitor.</p>\n<h2 id=\"transform-your-react-web-app-into-native-with-capacitor\">Transform your React Web App into Native with Capacitor</h2>\n<p>Adding native functionality and deploying to iOS, Android, and PWA with your existing React web app is easy. Just install Capacitor, drop it into to your project, and add a platform:</p>\n<pre><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @capacitor/cli @capacitor/core\nnpx cap init\nnpx cap <span class=\"token function\">add</span> ios</code></pre>\n<p>Then, to start using in a web app, import from <code>@capacitor/core</code>:</p>\n<pre><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Share <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> Share<span class=\"token punctuation\">.</span><span class=\"token function\">share</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  title<span class=\"token punctuation\">:</span> <span class=\"token string\">'My awesome thing'</span><span class=\"token punctuation\">,</span>\n  text<span class=\"token punctuation\">:</span> <span class=\"token string\">'Check out this really awesome thing'</span><span class=\"token punctuation\">,</span>\n  url<span class=\"token punctuation\">:</span> <span class=\"token string\">'https://capacitorjs.com/'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Then run your web app:</p>\n<pre><code class=\"language-shell\"><span class=\"token function\">npm</span> start</code></pre>\n<p>Capacitor apps can be built primarily in the browser, but to deploy and test on iOS or Android (simulator or device), open the IDE of choice and run directly in the IDE:</p>\n<pre><code class=\"language-shell\">npx cap <span class=\"token function\">open</span> ios</code></pre>\n<p>For the full getting started instructions, check out the <a href=\"https://capacitorjs.com/docs/getting-started\">Capacitor documentation</a>.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>React Native is no longer the only option for React devs to build iOS and Android apps. Capacitor provides a web-focused solution for teams building React web apps to enable them to ship to the app stores and the web with the same code base.</p>\n<p>And, for teams that are building a new app and interested in exploring a mobile-focused UI library for their Capacitor apps, <a href=\"https://ionicframework.com/\">Ionic React</a> is a great and popular option.</p>\n<p>Beyond React, Capacitor can be used with any modern web app technology, so is a good fit for teams with a diversity of frontend technologies in use, which is another challenge with React Native.</p>\n<p>We&#39;re excited about Capacitor in the React ecosystem, and many teams are as well. Today, Capacitor is powering React apps with hundreds of millions of users, and for major brands and <a href=\"https://ionicframework.com/customers\">enterprise customers</a> like Burger King and Popeye&#39;s. Capacitor adoption has been <a href=\"https://twitter.com/maxlynch/status/1280531102650769408\">growing quickly</a> and given that given that web development with React represents the largest area of React development (<a href=\"https://npmcharts.com/compare/react-native,react-dom?interval=7\">&gt; 17x React Native</a>), we&#39;re thrilled about the potential to help more web devs build cross-platform apps.</p>\n<p>Check out Capacitor today and stay tuned for some exciting updates with the project coming soon: <a href=\"https://capacitorjs.com/\">capacitorjs.com</a></p>\n","meta":{"title":"Native React Apps Without React Native","date":"2020-07-14T08:00:00.000Z","author":"Max Lynch <max@ionic.io>","authorUrl":"https://twitter.com/maxlynch"}},{"title":"Capacitor announcements at Ioniconf 2020","authorName":"Max Lynch","authorEmail":"max@ionic.io","authorUrl":"https://twitter.com/maxlynch","slug":"capacitor-announcements-at-ioniconf-2020","date":"2020-06-24T08:00:00.000Z","contents":"---\ntitle: Capacitor announcements at Ioniconf 2020\ndate: 2020-06-24 08:00:00\nauthor: Max Lynch <max@ionic.io>\nauthorUrl: https://twitter.com/maxlynch\n---\n\nToday at the first ever official Ioniconf, we unveiled a number of exciting updates to Capacitor and the Capacitor community.\n\nIn no particular order, we announced:\n\n* [Capacitor opening up to all modern web technologies]($POST#capacitor-opening-up)\n* [The Capacitor Community project]($POST#capacitor-community)\n* [Capacitor Elements]($POST#capacitor-elements)\n* [Deploy to App Store for Capacitor]($POST#deploy-to-app-store-for-capacitor)\n* [Updated site and domain]($POST#updated-site-domain-and-docs)\n\n<!--more-->\n\nThe conference kicks off a new era for Capacitor and for [Ionic](https://ionic.io/), the company behind Capacitor.\n\nIf you'd like to see the announcements live, the [keynote](https://ioniconf.com/) (along with the rest of the conference) is now [up](https://ioniconf.com/).\n\n## Capacitor opening up\n\nOne of the biggest announcements of the day was that Capacitor will be opening up to embrace every modern web app technology and ecosystem.\n\nWhile technically Capacitor has worked with any modern web framework and UI library, it was not always clear that Capacitor could be used without Ionic Framework, and the project certainly did not embrace outside frameworks.\n\nWith this change, expect to see a lot more Capacitor apps running Angular Material, Tailwind, Material UI, and even Bootstrap. Expect to see content, tutorials, examples, and more  on non-Ionic Framework options from the Capacitor team.\n\nThe new Capacitor mission is to help _all_ web developers build cross-platform apps with their web development skills.\n\n## Capacitor Community\n\nOne of the biggest challenges with an ecosystem like Capacitor (and like any other popular open source ecosystem) is making sure the community can fill in all the gaps left by the core team with plugins, add-ons, and more.\n\nYesterday, web announced a new [Capacitor Community](https://github.com/capacitor-community) GitHub org and NPM scope to curate the best community-supported Capacitor plugins and encourage more developers to build plugins.\n\nTo start, we have a number of great plugins and many are in development. Check out the [Http](https://github.com/capacitor-community/http), [Contacts](https://github.com/capacitor-community/contacts), and [Apple Sign In](https://github.com/capacitor-community/apple-sign-in) plugins. We've also started moving the [Electron](https://github.com/capacitor-community/electron) platform to the community org.\n\nEvery project in the Capacitor Community is _community maintained and supported_, so the Capacitor core team will not be able to provide any kind of community support to any project in here. However, the team is facilitating and in communication with all maintainers.\n\n## Capacitor Elements\n\nWe announced Capacitor Elements, an upcoming project to bring operating-system level UI experiences to every Capacitor app, regardless of the web framework or UI library an app uses.\n\nThese components will be powered by Ionic Framework under the hood, but will be fully compatible and not conflict with any modern UI library.\n\nThe goal is to provide the same types of utility APIs that the operating system would to a traditional native developer, such as Action Sheets, Bottom Drawers, Alerts, Modals, Cameras, and more.\n\nThis makes a Capacitor app feel native right away regardless of whether the app framework provides these controls.\n\nStay tuned for more updates soon!\n\n## Deploy to App Store for Capacitor\n\nWe announced that [Deploy to App Store](https://ionicframework.com/docs/appflow/destinations/intro), a powerful new feature available in Ionic's DevOps service [Appflow](https://useappflow.com/) that enables developers to push builds to the Apple App Store and Google Play Store, is now available to all paid Appflow plans.\n\nThis feature is a significant boost to teams frustrated with the manual and tedious app store publishing process, or for teams that wish to automate app store submission as part of their CI/CD pipeline.\n\nAppflow now fully supports Capacitor, and Capacitor is quickly becoming the preferred native runtime when using Appflow.\n\n## Updated Site, Domain, and Docs\n\nWe've updated the Capacitor site and moved to a new domain ([capacitorjs.com](https://capacitorjs.com)) and Twitter handle ([@capacitorjs](https://twitter.com/capacitorjs)).\n\nWe also rolled out [updated documentation](/docs) as we embark on a documentation overhaul.\n\n## Stay tuned\n\nCapacitor is quickly becoming the focal point of Ionic's open source offering, and we're investing heavily in it. The team itself has grown in the last few weeks and we are truly just getting started on our mission to enable all web developers to build cross-platform apps for the app store and the web.\n\nStay tuned for a ton more Capacitor updates in the coming months!","preview":"<p>Today at the first ever official Ioniconf, we unveiled a number of exciting updates to Capacitor and the Capacitor community.</p>\n<p>In no particular order, we announced:</p>\n<ul>\n<li><a href=\"/blog/capacitor-announcements-at-ioniconf-2020#capacitor-opening-up\">Capacitor opening up to all modern web technologies</a></li>\n<li><a href=\"/blog/capacitor-announcements-at-ioniconf-2020#capacitor-community\">The Capacitor Community project</a></li>\n<li><a href=\"/blog/capacitor-announcements-at-ioniconf-2020#capacitor-elements\">Capacitor Elements</a></li>\n<li><a href=\"/blog/capacitor-announcements-at-ioniconf-2020#deploy-to-app-store-for-capacitor\">Deploy to App Store for Capacitor</a></li>\n<li><a href=\"/blog/capacitor-announcements-at-ioniconf-2020#updated-site-domain-and-docs\">Updated site and domain</a></li>\n</ul>\n","html":"<p>Today at the first ever official Ioniconf, we unveiled a number of exciting updates to Capacitor and the Capacitor community.</p>\n<p>In no particular order, we announced:</p>\n<ul>\n<li><a href=\"$POST#capacitor-opening-up\">Capacitor opening up to all modern web technologies</a></li>\n<li><a href=\"$POST#capacitor-community\">The Capacitor Community project</a></li>\n<li><a href=\"$POST#capacitor-elements\">Capacitor Elements</a></li>\n<li><a href=\"$POST#deploy-to-app-store-for-capacitor\">Deploy to App Store for Capacitor</a></li>\n<li><a href=\"$POST#updated-site-domain-and-docs\">Updated site and domain</a></li>\n</ul>\n<!--more-->\n\n<p>The conference kicks off a new era for Capacitor and for <a href=\"https://ionic.io/\">Ionic</a>, the company behind Capacitor.</p>\n<p>If you&#39;d like to see the announcements live, the <a href=\"https://ioniconf.com/\">keynote</a> (along with the rest of the conference) is now <a href=\"https://ioniconf.com/\">up</a>.</p>\n<h2 id=\"capacitor-opening-up\">Capacitor opening up</h2>\n<p>One of the biggest announcements of the day was that Capacitor will be opening up to embrace every modern web app technology and ecosystem.</p>\n<p>While technically Capacitor has worked with any modern web framework and UI library, it was not always clear that Capacitor could be used without Ionic Framework, and the project certainly did not embrace outside frameworks.</p>\n<p>With this change, expect to see a lot more Capacitor apps running Angular Material, Tailwind, Material UI, and even Bootstrap. Expect to see content, tutorials, examples, and more  on non-Ionic Framework options from the Capacitor team.</p>\n<p>The new Capacitor mission is to help <em>all</em> web developers build cross-platform apps with their web development skills.</p>\n<h2 id=\"capacitor-community\">Capacitor Community</h2>\n<p>One of the biggest challenges with an ecosystem like Capacitor (and like any other popular open source ecosystem) is making sure the community can fill in all the gaps left by the core team with plugins, add-ons, and more.</p>\n<p>Yesterday, web announced a new <a href=\"https://github.com/capacitor-community\">Capacitor Community</a> GitHub org and NPM scope to curate the best community-supported Capacitor plugins and encourage more developers to build plugins.</p>\n<p>To start, we have a number of great plugins and many are in development. Check out the <a href=\"https://github.com/capacitor-community/http\">Http</a>, <a href=\"https://github.com/capacitor-community/contacts\">Contacts</a>, and <a href=\"https://github.com/capacitor-community/apple-sign-in\">Apple Sign In</a> plugins. We&#39;ve also started moving the <a href=\"https://github.com/capacitor-community/electron\">Electron</a> platform to the community org.</p>\n<p>Every project in the Capacitor Community is _community maintained and supported_, so the Capacitor core team will not be able to provide any kind of community support to any project in here. However, the team is facilitating and in communication with all maintainers.</p>\n<h2 id=\"capacitor-elements\">Capacitor Elements</h2>\n<p>We announced Capacitor Elements, an upcoming project to bring operating-system level UI experiences to every Capacitor app, regardless of the web framework or UI library an app uses.</p>\n<p>These components will be powered by Ionic Framework under the hood, but will be fully compatible and not conflict with any modern UI library.</p>\n<p>The goal is to provide the same types of utility APIs that the operating system would to a traditional native developer, such as Action Sheets, Bottom Drawers, Alerts, Modals, Cameras, and more.</p>\n<p>This makes a Capacitor app feel native right away regardless of whether the app framework provides these controls.</p>\n<p>Stay tuned for more updates soon!</p>\n<h2 id=\"deploy-to-app-store-for-capacitor\">Deploy to App Store for Capacitor</h2>\n<p>We announced that <a href=\"https://ionicframework.com/docs/appflow/destinations/intro\">Deploy to App Store</a>, a powerful new feature available in Ionic&#39;s DevOps service <a href=\"https://useappflow.com/\">Appflow</a> that enables developers to push builds to the Apple App Store and Google Play Store, is now available to all paid Appflow plans.</p>\n<p>This feature is a significant boost to teams frustrated with the manual and tedious app store publishing process, or for teams that wish to automate app store submission as part of their CI/CD pipeline.</p>\n<p>Appflow now fully supports Capacitor, and Capacitor is quickly becoming the preferred native runtime when using Appflow.</p>\n<h2 id=\"updated-site-domain-and-docs\">Updated Site, Domain, and Docs</h2>\n<p>We&#39;ve updated the Capacitor site and moved to a new domain (<a href=\"https://capacitorjs.com\">capacitorjs.com</a>) and Twitter handle (<a href=\"https://twitter.com/capacitorjs\">@capacitorjs</a>).</p>\n<p>We also rolled out <a href=\"/docs\">updated documentation</a> as we embark on a documentation overhaul.</p>\n<h2 id=\"stay-tuned\">Stay tuned</h2>\n<p>Capacitor is quickly becoming the focal point of Ionic&#39;s open source offering, and we&#39;re investing heavily in it. The team itself has grown in the last few weeks and we are truly just getting started on our mission to enable all web developers to build cross-platform apps for the app store and the web.</p>\n<p>Stay tuned for a ton more Capacitor updates in the coming months!</p>\n","meta":{"title":"Capacitor announcements at Ioniconf 2020","date":"2020-06-24T08:00:00.000Z","author":"Max Lynch <max@ionic.io>","authorUrl":"https://twitter.com/maxlynch"}},{"title":"Announcing Capacitor 2.0","authorName":"Max Lynch","authorEmail":"max@ionic.io","authorUrl":"https://twitter.com/maxlynch","slug":"announcing-capacitor-2-0","date":"2020-04-08T08:00:00.000Z","contents":"---\ntitle: Announcing Capacitor 2.0\ndate: 2020-04-08 08:00:00\nauthor: Max Lynch <max@ionic.io>\nauthorUrl: https://twitter.com/maxlynch\n---\n\nToday we are excited to announce Capacitor 2.0!\n\nCapacitor 2.0 offers some key platform updates as well as security and bug fixes. These include:\n\n * Swift 5 and Xcode 11+ support\n * Android 10 (SDK 29) and AndroidX support\n * Bug fixes and usability improvements to 23+ core plugins\n * Support for generating splash screens and icons\n\nWe documented the whole update and talked about what's next for Capacitor over on the Ionic blog.\n\nCheck it out:\n\n[https://ionicframework.com/blog/announcing-capacitor-2-0/](https://ionicframework.com/blog/announcing-capacitor-2-0/)","preview":"","html":"<p>Today we are excited to announce Capacitor 2.0!</p>\n<p>Capacitor 2.0 offers some key platform updates as well as security and bug fixes. These include:</p>\n<ul>\n<li>Swift 5 and Xcode 11+ support</li>\n<li>Android 10 (SDK 29) and AndroidX support</li>\n<li>Bug fixes and usability improvements to 23+ core plugins</li>\n<li>Support for generating splash screens and icons</li>\n</ul>\n<p>We documented the whole update and talked about what&#39;s next for Capacitor over on the Ionic blog.</p>\n<p>Check it out:</p>\n<p><a href=\"https://ionicframework.com/blog/announcing-capacitor-2-0/\">https://ionicframework.com/blog/announcing-capacitor-2-0/</a></p>\n","meta":{"title":"Announcing Capacitor 2.0","date":"2020-04-08T08:00:00.000Z","author":"Max Lynch <max@ionic.io>","authorUrl":"https://twitter.com/maxlynch"}},{"title":"Announcing Capacitor 1.0","authorName":"Max Lynch","authorEmail":"max@ionic.io","authorUrl":"https://twitter.com/maxlynch","slug":"announcing-capacitor-1-0","date":"2019-05-22T08:00:00.000Z","contents":"---\ntitle: Announcing Capacitor 1.0\ndate: 2019-05-22 08:00:00\nauthor: Max Lynch <max@ionic.io>\nauthorUrl: https://twitter.com/maxlynch\n---\n\nToday I’m thrilled to announce the 1.0 release of [Capacitor](/), Ionic’s new Native API Container that makes it easy to build web apps that run on iOS, Android, and the web as Progressive Web Apps—with full access to native functionality on each platform.\n\nWe documented this momentous occasion over on the Ionic blog, complete with a comparison to Cordova and where Capacitor is headed from here.\n\nTake a look: [https://ionicframework.com/blog/announcing-capacitor-1-0/](https://ionicframework.com/blog/announcing-capacitor-1-0/).","preview":"","html":"<p>Today I’m thrilled to announce the 1.0 release of <a href=\"/\">Capacitor</a>, Ionic’s new Native API Container that makes it easy to build web apps that run on iOS, Android, and the web as Progressive Web Apps—with full access to native functionality on each platform.</p>\n<p>We documented this momentous occasion over on the Ionic blog, complete with a comparison to Cordova and where Capacitor is headed from here.</p>\n<p>Take a look: <a href=\"https://ionicframework.com/blog/announcing-capacitor-1-0/\">https://ionicframework.com/blog/announcing-capacitor-1-0/</a>.</p>\n","meta":{"title":"Announcing Capacitor 1.0","date":"2019-05-22T08:00:00.000Z","author":"Max Lynch <max@ionic.io>","authorUrl":"https://twitter.com/maxlynch"}}]