{"title":"Storage","description":"Storing small to large amounts of data in Capacitor","url":"/docs/guides/storage","contributors":["mlynch"],"lastUpdated":"2020-07-20T20:35:51Z","headings":[{"id":"data-storage-in-capacitor","level":1,"text":"Data Storage in Capacitor"},{"id":"why-can-t-i-just-use-localstorage-or-indexeddb-","level":2,"text":"Why can&#39;t I just use LocalStorage or IndexedDB?"},{"id":"capacitor-storage-api","level":2,"text":"Capacitor Storage API"},{"id":"large-data-or-high-performance-storage-options","level":2,"text":"Large data or high performance storage options"}],"srcPath":"./docs-md/guides/storage.md","content":"\n<h1 id=\"data-storage-in-capacitor\">\n  \n  Data Storage in Capacitor\n  \n</h1>\n<p>Most apps need to persist and read local data. Depending on the specific use case, there are a few approaches one can take.</p>\n\n<h2 id=\"why-can-t-i-just-use-localstorage-or-indexeddb-\">\n  <a class=\"heading-link\" href=\"#why-can-t-i-just-use-localstorage-or-indexeddb-\"><ion-icon name=\"link\"></ion-icon>\n  Why can&#39;t I just use LocalStorage or IndexedDB?\n  </a>\n</h2>\n<p>Since Capacitor apps run primarily in a web view or browser, Web APIs for storage are available to Capacitor developers. However, there are some major caveats to keep in mind with these APIs.</p>\n<p>Local Storage can be used for small amounts of temporary data, such as a user id, but <em>must be considered transient</em>, meaning your app needs to expect that the data will be lost eventually. This is because the OS will reclaim local storage from Web Views if a device is running low on space. The same can be said for IndexedDB at least on iOS (on Android, the <a href=\"https://web.dev/persistent-storage/\">persisted storage API</a> is available to mark IndexedDB as persisted). Read more on <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria\">data storage eviction policies</a> in the browser.</p>\n\n<h2 id=\"capacitor-storage-api\">\n  <a class=\"heading-link\" href=\"#capacitor-storage-api\"><ion-icon name=\"link\"></ion-icon>\n  Capacitor Storage API\n  </a>\n</h2>\n<p>Capacitor comes with a native <a href=\"/docs/apis/storage\">Storage API</a> that avoids the eviction issues above, but is meant for small amounts of data.</p>\n<p>The Storage API provides a simple key/value API with no advanced query support:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Plugins <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> Storage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> Plugins<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// JSON \"set\" example</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">setObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> Storage<span class=\"token punctuation\">.</span><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    key<span class=\"token punctuation\">:</span> <span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Max'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// JSON \"get\" example</span>\n<span class=\"token keyword\">async</span> <span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Storage<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> key<span class=\"token punctuation\">:</span> <span class=\"token string\">'user'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"large-data-or-high-performance-storage-options\">\n  <a class=\"heading-link\" href=\"#large-data-or-high-performance-storage-options\"><ion-icon name=\"link\"></ion-icon>\n  Large data or high performance storage options\n  </a>\n</h2>\n<p>For storing large amounts of data and accessing it in a high performance way, there are a few options.</p>\n<p>The most widely supported option is SQLite. There are a number of community-maintained SQLite plugins that should work in Capacitor, including <a href=\"https://github.com/jepiqueau/capacitor-sqlite\">capacitor-sqlite</a> and <a href=\"https://github.com/xpbrew/cordova-sqlite-storage\">cordova-plugin-sqlite</a>.</p>\n<p>The Capacitor team also offers an <a href=\"https://ionicframework.com/enterprise/offline-storage\">enterprise SQLite storage solution</a> with encryption support and integration with <a href=\"https://ionicframework.com/enterprise/identity-vault\">secure key management APIs</a> on device.</p>\n"}