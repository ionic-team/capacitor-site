{"title":"Live Reload","description":"Use Live Reload to easily debug the web and native portions of an app on a device or simulator.","url":"/docs/guides/live-reload","contributors":["dotNetkow"],"lastUpdated":"2020-06-25T18:55:44Z","headings":[{"id":"live-reload","level":1,"text":"Live Reload"},{"id":"using-with-ionic-cli","level":2,"text":"Using with Ionic CLI"},{"id":"using-with-framework-clis","level":2,"text":"Using with Framework CLIs"}],"srcPath":"./docs-md/guides/live-reload.md","content":"\n<h1 id=\"live-reload\">\n  \n  Live Reload\n  \n</h1>\n<p>Live Reload is useful for debugging both the web portion of an app as well as native functionality on device hardware or simulators. Rather than deploy a new native binary every time you make a code change, it reloads the browser (or Web View) when changes in the app are detected.</p>\n<blockquote>\n<p>If running on a device, make sure it is on the same Wi-Fi network as your computer.</p>\n</blockquote>\n\n<h2 id=\"using-with-ionic-cli\">\n  <a class=\"heading-link\" href=\"#using-with-ionic-cli\"><ion-icon name=\"link\"></ion-icon>\n  Using with Ionic CLI\n  </a>\n</h2>\n<p>The Ionic CLI includes a complete Live Reload experience, automating all of the steps that are detailed manually below. Install it along with <code>native-run</code> (a cross-platform command-line utility for running native binaries on devices and simulators/emulators): </p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g @ionic/cli native-run</code></pre>\n  </highlight-code-line>\n  <p>Next, use the <code>ionic cap run</code> command to start the Live Reload process:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code>ionic cap run android -l --external\nionic cap run ios -l --external</code></pre>\n  </highlight-code-line>\n  <p>This performs an <code>ionic build</code>, copies web assets into the specified native platform, then opens the IDE for your native project (Xcode for iOS, Android Studio for Android).</p>\n<p>The <code>server</code> entry automatically created in <code>capacitor.config.json</code> is removed after the command terminates. For complete details on the <code>ionic cap run</code> command, <a href=\"https://ionicframework.com/docs/cli/commands/capacitor-run\">see here</a>.</p>\n\n<h2 id=\"using-with-framework-clis\">\n  <a class=\"heading-link\" href=\"#using-with-framework-clis\"><ion-icon name=\"link\"></ion-icon>\n  Using with Framework CLIs\n  </a>\n</h2>\n<p>Capacitor supports CLIs with live reload capability.</p>\n<p>First, determine your computer&#39;s IP address on your LAN.</p>\n<ul>\n<li>On macOS, run <code>ifconfig</code>. The IP address is listed under <code>en0</code> entry, after <code>inet</code>. Alternatively, open System Preferences -&gt; Network -&gt; (select active network) then find the IP listed under Status.</li>\n<li>On Windows, run <code>ipconfig</code>. Look for the <code>IPv4</code> address.</li>\n</ul>\n<p>Next, start your local web server. The server must be bound to <code>0.0.0.0</code> in order to be accessible from the LAN. The command to run will vary, but is typically:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code><span class=\"token function\">npm</span> run start</code></pre>\n  </highlight-code-line>\n  <blockquote>\n<p>With react-scripts, use <code>HOST=0.0.0.0 npm run start</code></p>\n</blockquote>\n<p>Within <code>capacitor.config.json</code>, create a <code>server</code> entry then configure the <code>url</code> field using the local web server&#39;s IP address and port:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-json\"><code><span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://192.168.1.68:8100\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"cleartext\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre>\n  </highlight-code-line>\n  <p>Next, run <code>npx cap copy</code> to copy the updated Capacitor config into all native projects.</p>\n<p>Open the native IDE if it&#39;s not already open:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-bash\"><code>npx cap <span class=\"token function\">open</span> ios\nnpx cap <span class=\"token function\">open</span> android</code></pre>\n  </highlight-code-line>\n  <p>Finally, click the Run button to launch the app and start using Live Reload.</p>\n<blockquote>\n<p>Be careful not to commit the server config to source control.</p>\n</blockquote>\n"}