{"title":"JavaScript Utilities","description":"Capacitor's JavaScript Utilities","url":"/docs/basics/utilities","contributors":["dotNetkow"],"lastUpdated":"2020-07-09T20:25:07Z","headings":[{"id":"javascript-utilities","level":1,"text":"JavaScript Utilities"},{"id":"convertfilesrc","level":2,"text":"convertFileSrc"},{"id":"getplatform","level":2,"text":"getPlatform"},{"id":"isnative","level":2,"text":"isNative"},{"id":"ispluginavailable","level":2,"text":"isPluginAvailable"}],"srcPath":"./docs-md/basics/utilities.md","content":"\n<h1 id=\"javascript-utilities\">\n  \n  JavaScript Utilities\n  \n</h1>\n<p class=\"intro\">Capacitor has several JavaScript utilities useful for ensuring apps run successfully across multiple platforms with the same codebase. To use them, import Capacitor then call the desired utility function:</p>\n\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Capacitor <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@capacitor/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> isAvailable <span class=\"token operator\">=</span> Capacitor<span class=\"token punctuation\">.</span><span class=\"token function\">isPluginAvailable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Camera'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"convertfilesrc\">\n  <a class=\"heading-link\" href=\"#convertfilesrc\"><ion-icon name=\"link\"></ion-icon>\n  convertFileSrc\n  </a>\n</h2>\n<p><code>convertFileSrc: (filePath: string) =&gt; string;</code></p>\n<p>Convert a device filepath into a Web View-friendly path.</p>\n<p>Capacitor apps are served on a different protocol than device files. To avoid difficulties between these protocols, paths to device files must be rewritten. For example, on Android, <code>file:///path/to/device/file</code> must be rewritten as <code>http://localhost/_capacitor_file_/path/to/device/file</code> before being used in the Web View.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code><span class=\"token comment\">// file:///path/to/device/photo.jpg</span>\n<span class=\"token keyword\">const</span> savedPhotoFile <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Filesystem<span class=\"token punctuation\">.</span><span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  path<span class=\"token punctuation\">:</span> <span class=\"token string\">\"myFile.jpg\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token punctuation\">:</span> base64Data<span class=\"token punctuation\">,</span>\n  directory<span class=\"token punctuation\">:</span> FilesystemDirectory<span class=\"token punctuation\">.</span>Data\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// http://localhost/path/to/device/photo.jpg</span>\n<span class=\"token keyword\">const</span> savedPhoto <span class=\"token operator\">=</span> Capacitor<span class=\"token punctuation\">.</span><span class=\"token function\">convertFileSrc</span><span class=\"token punctuation\">(</span>savedPhotoFile<span class=\"token punctuation\">.</span>uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"savedPhoto\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> savedPhoto<span class=\"token punctuation\">;</span></code></pre>\n  </highlight-code-line>\n  \n  <highlight-code-line >\n    <pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>savedPhoto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"getplatform\">\n  <a class=\"heading-link\" href=\"#getplatform\"><ion-icon name=\"link\"></ion-icon>\n  getPlatform\n  </a>\n</h2>\n<p><code>getPlatform: () =&gt; string;</code></p>\n<p>Get the name of the platform the app is currently running on: <code>web</code>, <code>ios</code>, <code>android</code>.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Capacitor<span class=\"token punctuation\">.</span><span class=\"token function\">getPlatform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'ios'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"isnative\">\n  <a class=\"heading-link\" href=\"#isnative\"><ion-icon name=\"link\"></ion-icon>\n  isNative\n  </a>\n</h2>\n<p><code>isNative?: boolean;</code></p>\n<p>Check whether the currently running platform is native (<code>ios</code>, <code>android</code>).</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Capacitor<span class=\"token punctuation\">.</span>isNative<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  \n<h2 id=\"ispluginavailable\">\n  <a class=\"heading-link\" href=\"#ispluginavailable\"><ion-icon name=\"link\"></ion-icon>\n  isPluginAvailable\n  </a>\n</h2>\n<p><code>isPluginAvailable: (name: string) =&gt; boolean;</code></p>\n<p>Check if a plugin is available on the currently running platform. The plugin name is used in the plugin registry (e.g. <code>const { Name } = Plugins;</code>), which means it also works with custom plugins.</p>\n\n  <highlight-code-line >\n    <pre class=\"language-typescript\"><code><span class=\"token keyword\">const</span> isAvailable <span class=\"token operator\">=</span> Capacitor<span class=\"token punctuation\">.</span><span class=\"token function\">isPluginAvailable</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Camera'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isAvailable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Have the user upload a file instead</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Otherwise, make the call:</span>\n  <span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Camera<span class=\"token punctuation\">.</span><span class=\"token function\">getPhoto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    resultType<span class=\"token punctuation\">:</span> CameraResultType<span class=\"token punctuation\">.</span>Uri\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  "}