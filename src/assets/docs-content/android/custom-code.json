{"title":"Custom Native Android Code","description":"Custom Native Android Code","url":"/docs/android/custom-code","contributors":["mlynch","jcesarmobile","RoderickQiu"],"headings":[{"id":"custom-native-android-code","level":1,"text":"Custom Native Android Code"},{"id":"webview-accessible-native-code","level":2,"text":"WebView Accessible Native Code"},{"id":"private-native-code","level":2,"text":"Private Native Code"}],"srcPath":"./docs-md/android/custom-code.md","content":"\n<h1 id=\"custom-native-android-code\">\n  \n  Custom Native Android Code\n  \n</h1>\n<p class=\"intro\">Many apps will want to add custom Java code to implement native features, without the overhead of building and publishing a proper Capacitor plugin.</a>\n\n<p class=\"intro\">There are two ways to do this depending on whether or not you need to access that code from the WebView:</a>\n\n\n<h2 id=\"webview-accessible-native-code\">\n  <a class=\"heading-link\" href=\"#webview-accessible-native-code\"><ion-icon name=\"ios-link\"></ion-icon>\n  WebView Accessible Native Code\n  </a>\n</h2>\n<p>The easiest way to build custom native code that needs to be accessible in the WebView is to build\na local Capacitor plugin for it. In this case, building the plugin is as simple as building a class\nthat inherits from <code>com.getcapacitor.Plugin</code> and uses the <code>@NativePlugin()</code> and <code>@PluginMethod()</code> annotations.</p>\n<p>Here is a simple example: </p>\n<p><code>com/example/myapp/CustomNativePlugin.java</code> in <code>android/app/src/main/java</code>:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>myapp</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>getcapacitor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">NativePlugin</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>getcapacitor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Plugin</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>getcapacitor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">PluginCall</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>getcapacitor</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">PluginMethod</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@NativePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomNativePlugin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Plugin</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@PluginMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">customCall</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PluginCall</span> call<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">String</span> message <span class=\"token operator\">=</span> call<span class=\"token punctuation\">.</span><span class=\"token function\">getString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// More code here...</span>\n    call<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@PluginMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">customFunction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PluginCall</span> call<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// More code here...</span>\n    call<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>Finally, register the plugin in your Activity:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// Other imports...</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>myapp</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">CustomNativePlugin</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainActivity</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BridgeActivity</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Bundle</span> savedInstanceState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onCreate</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Initializes the Bridge</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>savedInstanceState<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Plugin</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Additional plugins you've installed go here</span>\n      <span class=\"token comment\">// Ex: add(TotallyAwesomePlugin.class);</span>\n      <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomNativePlugin</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n  </highlight-code-line>\n  <p>Then you can use your functions in your webView code:</p>\n\n  <highlight-code-line >\n    <pre class=\"language-javascript\"><code class=\"language-javascript\">// Other codes...\nimport { Plugins } from \"@capacitor/core\";\nconst { CustomNativePlugin } = Plugins;\n// Other codes...\nCustomNativePlugin.customCall({ message: \"CUSTOM MESSAGE\" });\nCustomNativePlugin.customFunction();\n// Other codes...</code></pre>\n  </highlight-code-line>\n  <p>For more usages of plugin APIs, have a look at <a href=\"https://capacitor.ionicframework.com/docs/plugins/android/\">Capacitor Android Plugin Guide</a>.</p>\n\n<h2 id=\"private-native-code\">\n  <a class=\"heading-link\" href=\"#private-native-code\"><ion-icon name=\"ios-link\"></ion-icon>\n  Private Native Code\n  </a>\n</h2>\n<p>If your code doesn&#39;t need to be accessible from the WebView, then simply add your code anywhere it needs to go. With Capacitor, you have full\ncontrol over your native project. Need to add a new event handler in your Activity? Just update <code>MainActivity</code> and add it. The world is truly your oyster.</p>\n"}